name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        neovim: [stable, nightly]
        exclude:
          - os: macos-latest
            neovim: nightly
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: ${{ matrix.neovim }}

      - name: Install Dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ripgrep fd-find python3 nodejs npm
          npm install -g tree-sitter-cli

      - name: Install Dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install ripgrep fd node
          npm install -g tree-sitter-cli

      - name: Setup Configuration
        run: |
          mkdir -p ~/.config
          ln -sf $GITHUB_WORKSPACE ~/.config/nvim

      - name: Install Plugins
        timeout-minutes: 5
        run: |
          nvim --headless -c "Lazy! sync" -c "qa" || true
          sleep 2
          nvim --headless -c "Lazy! sync" -c "qa" || true

      - name: Test Configuration Loading
        run: |
          nvim --headless -c "echo 'Config loaded successfully'" -c "qa"

      - name: Test Treesitter Installation
        timeout-minutes: 3
        run: |
          nvim --headless -c "TSInstall lua" -c "qa" || true

      - name: Check Health
        continue-on-error: true
        run: |
          nvim --headless -c "checkhealth" -c "qa" > health.log 2>&1
          cat health.log | head -100

      - name: Run Local Tests
        if: matrix.os == 'ubuntu-latest'
        run: |
          chmod +x test/run_tests.sh
          ./test/run_tests.sh || true

      - name: Upload Health Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: health-${{ matrix.os }}-${{ matrix.neovim }}
          path: health.log
          retention-days: 7

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Validate JSON
        run: |
          python3 -m json.tool lazy-lock.json > /dev/null
          echo "✓ lazy-lock.json is valid"

      - name: Check File Structure
        run: |
          required_files=(
            "init.lua"
            "lua/core/init.lua"
            "lua/core/plugins.lua"
            "lua/core/configs.lua"
            "lua/core/mappings.lua"
            "lua/core/colors.lua"
          )

          for file in "${required_files[@]}"; do
            if [ -f "$file" ]; then
              echo "✓ $file exists"
            else
              echo "✗ $file is missing"
              exit 1
            fi
          done

      - name: Check Lua Syntax
        run: |
          # Install lua and luacheck
          sudo apt-get update
          sudo apt-get install -y lua5.4 luarocks
          sudo luarocks install luacheck

          # Create luacheck config
          cat > .luacheckrc << 'EOF'
          globals = { "vim", "_G" }
          read_globals = { "vim" }
          max_line_length = 120
          exclude_files = { ".git/*", "test/*" }
          EOF

          # Run luacheck (allow it to fail for warnings)
          luacheck lua/ init.lua --formatter plain || true
